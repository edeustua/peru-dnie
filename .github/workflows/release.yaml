name: Release to PyPI and Github

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: "Release version"
        required: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Inputs from workflow dispatch
        shell: bash
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "PERU_DNIE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "PERU_DNIE_VERSION: ${{ github.event.inputs.version }}"

      - name: Get the release version from the tag
        shell: bash
        if: env.PERU_DNIE_VERSION == ''
        run: |
          # Apparently, this is the right way to get a tag name. Really?
          #
          # See: https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167/highlight/true#M1027
          echo "PERU_DNIE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.PERU_DNIE_VERSION }}"


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build the package
        run: python -m build


      - name: Create GitHub release
        id: release
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create --title "${{ env.PERU_DNIE_VERSION }}" "${{ env.PERU_DNIE_VERSION }}"

      - name: Upload release archive
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          ls -lh dist
          gh release upload "${{ env.PERU_DNIE_VERSION }}" dist/peru_dnie*.tar.gz
          gh release upload "${{ env.PERU_DNIE_VERSION }}" dist/peru_dnie*.whl

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*

      - name: Cleanup build artifacts
        run: rm -rf dist build *.egg-info
